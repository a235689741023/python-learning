"""
str.format()

旗標字元
'#'     配合十六進位、八進位做轉換時，可在前方補0
'0'     數值前補0
'-'     靠左對齊，若與0同時使用，會優於0
' '     會保留一個空格
>       向右對齊
<       向左對齊
\uXXXX    \u加上4個16進位數，表是一個Unicode字符


轉換指定形式
fill        可填補任何字元，但不包括 大括號
align       以四種字元做對齊 >>   <靠左  >靠右   =填補   ^置中
sign        使用 +  -  or  空格，同%格式字串
#           用法與%格式運算子同
0           用法與%格式運算子同
width       欄寬
,               千位符號
.precision       精確度，用法與%格式運算子同
typecode        用法與%格式運算子幾乎同
"""

num = 1.41421
print("num = {:7.3f}".format(num))  #總長度7的浮點數，包括小數點 (不足則左方補空白)
print("num = {:07.3f}".format(num))  # 0  >>旗標字元，7 >>欄寬，3 >>精確度，f >>浮點數


# {欄名:轉換指定形式}
print('PI = %10.5f' % (3.14159))
print('PI = {0:010f}'.format(3.14159))  #前方補0，欄寬10

radius = (3.14159)*20*20
area = int(radius)
print(' 靠右 = {0:=>12d}'.format(area))
print(' 置中 = {0:=^12d}',format(area))
print(' PI = {0:.5f}\n'
      ' 圓面積 = {1:,.4f}'.format(3.14159, area))  #圓面積加上 千位逗點
print(' 圓面積 = {0:d}, {0:#b}, {0:#x}'.format(area))  #以十進位、二進位、十六進位 輸出
